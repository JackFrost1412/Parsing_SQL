Query Number,SQL Query
Query 1,"SELECT dữ liệu từ bảng TBL_SLIP_MARK bảng group by theo INPUTTER, DEPARTMENT_CODE, COMPANY_ACCOUNTING, CO_CODE, DATE_TIME ( Các trường này đóng vai trò là KEY dữ liệu ).
INSERTnhững dữ liệu mới"
Query 2,"SELECT dữ liệu từ bảng TBL_SLIP_MARK_TRANS_NON_ACC bảng group by theo INPUTTER, VALUE_DATE ( lấy theo Date ko lấy Time) , CO_CODE, BUSINESS, DEPARTMENT_CODE, COMPANY_USER ( Các trường này đóng vai trò là KEY dữ liệu ).
INSERTnhững dữ liệu mới"
Query 3,"SELECT 
sm.MARK_USER mark_user,
sm.COMPANY_ACCOUNTING co_code,
AD_UNIT.UNIT_NAME unit_name,
TO_CHAR( sm.MARK_DATE, 'DD-MM-YYYY' ) mark_date,
1 number_slip
FROM
TBL_SLIP_MARK sm
JOIN AD_UNIT ON sm.COMPANY_ACCOUNTING = AD_UNIT.UNIT_CODE
WHERE
TRUNC( sm.MARK_DATE ) = TRUNC( SYSDATE - INTERVAL '1' DAY )
AND sm.MARK_USER IS NOT NULL
AND sm.SLIP_FROM = 'BI'
),
slipMarkNonAccData AS (
SELECT 
sm.MARK_USER mark_user,
sm.CO_CODE co_code,
AD_UNIT.UNIT_NAME unit_name,
TO_CHAR( sm.MARK_DATE, 'DD-MM-YYYY' ) mark_date,
1 number_slip
FROM
STG_SEAOPS.TBL_SLIP_MARK_TRANS_NON_ACC sm
JOIN AD_UNIT ON sm.CO_CODE = AD_UNIT.UNIT_CODE
WHERE
TRUNC( sm.MARK_DATE ) = TRUNC( SYSDATE - INTERVAL '1' DAY )
AND sm.MARK_USER IS NOT NULL
),
slipMarkNonTransRefData AS (
SELECT 
sm.MARK_USER mark_user,
sm.CO_CODE co_code,
AD_UNIT.UNIT_NAME unit_name,
TO_CHAR( sm.CREATED_DATE, 'DD-MM-YYYY' ) mark_date,
sm.TOTAL number_slip
FROM
TBL_SLIP_MARK_NON_TRANS_REF sm
JOIN AD_UNIT ON sm.CO_CODE = AD_UNIT.UNIT_CODE
WHERE
TRUNC( sm.CREATED_DATE ) = TRUNC( SYSDATE - INTERVAL '1' DAY )
AND sm.MARK_USER IS NOT NULL
),
SELECT * FROM slipMarkNonTransRefData ),
group_datas AS (
SELECT 
mark_user,
co_code AS unit_code,
unit_name,
mark_date,
sum( number_slip ) total_trans_ref
FROM
union_datas ud
GROUP BY
mark_user,
co_code,
mark_date,
unit_name
ORDER BY
mark_user
SELECT 
( gds.mark_user || unit_code || mark_date ) AS COMPOSE_KEY,
gds.*
FROM
group_datas gds"
Query 4,"SELECT 
*
FROM
TBL_PERIOD_EVALUATION pe
JOIN TBL_CONTRACT_CONDITION cc ON cc.id = pe.CONTRACT_CONDITION_ID
WHERE pe.EVALUATION_DATE IS NOT NULL
AND pe.AUTO_EVALUATION_RESULT IS NULL
AND pe.GROUP_CONTRACT_CONDITION = 'CREDIT_RELATION'
AND  cc.STATUS = 'APPROVED'
AND ( (pe.REGISTER_DATE IS NOT NULL AND TRUNC(pe.REGISTER_DATE) < TRUNC (sysdate)) OR (pe.REGISTER_DATE IS NULL AND TRUNC(pe.EVALUATION_DATE) < TRUNC (sysdate)) );"
Query 5,"SELECT 
*
FROM
TBL_PERIOD_EVALUATION pe
JOIN TBL_PERIOD_EVALUATION pe1 ON pe.CONTRACT_CONDITION_ID = pe1.CONTRACT_CONDITION_ID AND pe.PERIOD - 1 = pe1.PERIOD
WHERE AND pe.FREQUENCY = 1 AND pe.FREQUENCY_UNIT = 'M' AND pe.CONTRACT_CONDITION_ID = :contractConditionId;"
Query 6,SELECT *  TBL_CONDITION_CREDIT_RELATION cr WHERE cr.CONDITION_ID = :contractConditionId;
Query 7,"SELECT 
*
FROM
TBL_PERIOD_EVALUATION pe
JOIN TBL_CONTRACT_CONDITION cc ON cc.ID = pe.CONTRACT_CONDITION_ID
WHERE
pe.EVALUATION_DATE IS NOT NULL
AND pe.AUTO_EVALUATION_RESULT IS NULL
AND pe.GROUP_CONTRACT_CONDITION = 'REVENUE'
AND cc.STATUS = 'APPROVED'
AND (
( pe.REGISTER_DATE IS NOT NULL AND TRUNC( pe.REGISTER_DATE ) < TRUNC( sysdate ) )
OR ( pe.REGISTER_DATE IS NULL AND TRUNC( pe.EVALUATION_DATE ) < TRUNC( sysdate ) )
);"
Query 8,"SELECT 
SUM( DISTINCT LOC_AMT )
FROM
STG_SEAOPS.TBL_BI_DISBURSEMENT_SALES
WHERE
CONTRACT_REF =: contract_ref
AND TRANS_TYPE IN ( '08', '09', '12' )
AND ( TO_DATE( VALUE_DATE, 'DD-MM-YYYY' ) BETWEEN : from_date AND : to_date )
GROUP BY
CONTRACT,
DAYID,
TRANS_TYPE;"
Query 9,"SELECT 
SUM( DISTINCT LOC_AMT )
FROM
STG_SEAOPS.TBL_BI_DISBURSEMENT_SALES
WHERE
CONTRACT_REF =: contract_ref
AND TRANS_TYPE IN ( '01', '02', '03' )
AND ( TO_DATE( VALUE_DATE, 'DD-MM-YYYY' ) BETWEEN : from_date AND : to_date )
GROUP BY
CONTRACT,
DAYID,
TRANS_TYPE;"
Query 10,"SELECT 
SUM( LC_AMOUNT_LCY )
FROM
TBL_BI_LC_RELEASE_SALES
WHERE
( TO_DATE( ISSUE_DATE, 'DD-MM-YYYY' ) BETWEEN : from_date AND : to_date )
AND CUSTOMER = : customerId
GROUP BY
CUSTOMER;"
Query 11,"SELECT 
SUM( AMOUNT )
FROM
TBL_BI_GUARANTEE_SALES
WHERE
( TO_DATE( PAST_SCHED_DATE, 'DD-MM-YYYY' ) BETWEEN : from_date AND : to_date )
AND CUSTOMER_ID = : customerId
GROUP BY
CUSTOMER_ID;"
Query 12,"SELECT 
SUM( AMOUNT )
FROM
TBL_BI_GUARANTEE_SALES
WHERE
( TO_DATE( PAST_SCHED_DATE, 'DD-MM-YYYY' ) BETWEEN : from_date AND : to_date )
AND CUSTOMER_ID = : customerId  AND CATEGORY = '28030'
GROUP BY
CUSTOMER_ID;"
Query 13,"SELECT 
SUM( AMOUNT )
FROM
TBL_BI_GUARANTEE_SALES
WHERE
( TO_DATE( PAST_SCHED_DATE, 'DD-MM-YYYY' ) BETWEEN : from_date AND : to_date )
AND CUSTOMER_ID = : customerId   AND CATEGORY = '28010'
GROUP BY
CUSTOMER_ID;"
Query 14,"SELECT 
SUM( AMOUNT )
FROM
TBL_BI_GUARANTEE_SALES
WHERE
( TO_DATE( PAST_SCHED_DATE, 'DD-MM-YYYY' ) BETWEEN : from_date AND : to_date )
AND CUSTOMER_ID = : customerId   AND CATEGORY = '28009'
GROUP BY
CUSTOMER_ID;"
Query 15,"SELECT 
SUM( AMOUNT )
FROM
TBL_BI_GUARANTEE_SALES
WHERE
( TO_DATE( PAST_SCHED_DATE, 'DD-MM-YYYY' ) BETWEEN : from_date AND : to_date )
AND CUSTOMER_ID = : customerId  AND CATEGORY = '28040'
GROUP BY
CUSTOMER_ID;"
Query 16,"SELECT 
SUM( AMOUNT )
FROM
TBL_BI_GUARANTEE_SALES
WHERE
( TO_DATE( PAST_SCHED_DATE, 'DD-MM-YYYY' ) BETWEEN : from_date AND : to_date )
AND CUSTOMER_ID = : customerId AND CATEGORY = '28042'
GROUP BY
CUSTOMER_ID;"
Query 17,"SELECT 
SUM( CAST( DEBT AS DECIMAL ) )
FROM
TBL_BI_CONTRACT_DEBT
WHERE
DAYID = : to_date
AND CUSTOMER_ID = : customerId
GROUP BY
CUSTOMER_ID;"
Query 18,"SELECT 
SUM( DISTINCT CAST( AMOUNT_LCY AS DECIMAL ) )
FROM
TBL_BI_CREDIT_SALES
WHERE
( DAYID BETWEEN : from_date AND : to_date )
AND CUSTOMER_ID = : customerId
GROUP BY
CUSTOMER_ID,OUT_REFERENCE;"
Query 19,"SELECT 
SUM( DISTINCT CAST( AMOUNT_LCY AS DECIMAL ) )
FROM
TBL_BI_CREDIT_SALES
WHERE
( DAYID BETWEEN : from_date AND : to_date )
AND CUSTOMER_ID = : customerId  AND OUT_REFERENCE like 'FT%'
GROUP BY
CUSTOMER_ID,OUT_REFERENCE;"
Query 20,"SELECT 
SUM( DISTINCT CAST( AMOUNT_LCY AS DECIMAL ) )
FROM
TBL_BI_CREDIT_SALES
WHERE
( DAYID BETWEEN : from_date AND : to_date )
AND CUSTOMER_ID = : customerId  AND OUT_REFERENCE like 'TT%'
GROUP BY
CUSTOMER_ID,OUT_REFERENCE;"
Query 21,"SELECT 
SUM( DISTINCT CAST( AMOUNT_LCY AS DECIMAL ) )
FROM
TBL_BI_CREDIT_SALES
WHERE
( DAYID BETWEEN : from_date AND : to_date )
AND CUSTOMER_ID = : customerId  AND OUT_REFERENCE like 'TF%'
GROUP BY
CUSTOMER_ID,OUT_REFERENCE;"
Query 22,"SELECT 
SUM( BALANCE )
FROM
TBL_BI_DISBURSEMENT_HISTORY
WHERE
CONTRACT_REF = : contractId
GROUP BY
CONTRACT_REF;"
Query 23,"SELECT 
TOI_VALUE
FROM
TBL_CONFIG_INPUT_TOI
WHERE
CONTRACT_ID = : contractId
AND CUSTOMER_ID = : customerId
AND PERIOD = : period;"
Query 24,"SELECT 
ID,
AUTO_PERIOD,
BUSINESS_UNIT_NOTE,
CONTENT,
CONTRACT_ID,
CONTROL_METHOD,
CREATED_DATE,
CREATED_USER,
DESCRIPTION,
DOCUMENT_NAME,
FIRST_DATE_CHOSEN_PERIOD,
FREQUENCY,
FREQUENCY_UNIT,
NEW_CUSTOMER,
RULE_MATCH,
RULE_NUMBER,
SANCTION,
SANCTION_TYPE,
STATUS,
TOI,
TOI_MATCH,
TOI_VALUE,
TYPE_PERIOD_RATE,
UPDATED_DATE,
UPDATED_USER,
START_PERIOD,
GROUP_CONTRACT_CONDITION,
REASON,
MIN_APPROVAL_VALUE,
IS_MIN_APPROVAL_VALUE,
LOAN_PRODUCT_ID,
CUSTOMER_ID,
CLONE_ID,
AUTO_EVALUATION_RESULT,
CUSTOMER_CLASS,
CO_CODE,
COMPANY_NAME_VN,
VERSION_CONFIG_ID,
ORIGIN_ID
FROM
TBL_REVENUE_CONDITION
WHERE
ID = : contractConditionId;"
Query 25,"SELECT 
ID,
ADVANCE,
APPROVAL_RATE,
CONTRACT,
CREATED_DATE,
CREATED_USER,
CREDIT_REVENUE,
DEBT_REVENUE,
DISBURMENT_REVENUE,
FT_ENTRY,
GUARANTEE_REVENUE,
LC_REVENUE,
LOAN,
MONEY_ON_DOCUMENT,
ORIGINAL_INTEREST_REVENUE,
OTHER_NUMBER,
PAYMENT,
RECIPROCAL,
REVENUE_CONDITION_ID,
RULE_NUMBER,
TF_ENTRY,
TT_ENTRY,
UPDATED_DATE,
UPDATED_USER,
DISBURSEMENT_MONEY,
DOCUMENT_ADDITIONAL,
AUTO_EVALUATION_RESULT,
VERSION_CONFIG_ID
FROM
TBL_REVENUE_CONFIGURATION
WHERE
REVENUE_CONDITION_ID = : contractConditionId;"
Query 26,"SELECT 
ID,
ADVANCE,
APPROVAL_RATE,
CONTRACT,
CREATED_DATE,
CREATED_USER,
CREDIT_REVENUE,
DEBT_REVENUE,
DISBURMENT_REVENUE,
FT_ENTRY,
GUARANTEE_REVENUE,
LC_REVENUE,
LOAN,
MONEY_ON_DOCUMENT,
ORIGINAL_INTEREST_REVENUE,
OTHER_NUMBER,
PAYMENT,
RECIPROCAL,
REVENUE_CONDITION_ID,
RULE_NUMBER,
TF_ENTRY,
TT_ENTRY,
UPDATED_DATE,
UPDATED_USER,
DISBURSEMENT_MONEY,
DOCUMENT_ADDITIONAL,
AUTO_EVALUATION_RESULT,
VERSION_CONFIG_ID
FROM
TBL_REVENUE_CONFIGURATION
WHERE
REVENUE_CONDITION_ID = : contractConditionId;"
Query 27,"SELECT 
TBL_REVENUE_PERIOD_RATE.PERIOD,
TBL_REVENUE_PERIOD_RATE.RATE,
TBL_REVENUE_PERIOD_RATE.TYPE
FROM
TBL_REVENUE_PERIOD_RATE
WHERE
( PERIOD =: period AND TYPE =: typePeriodRate )"
Query 28,"SELECT 
TBL_REVENUE_PERIOD_RATE.PERIOD,
TBL_REVENUE_PERIOD_RATE.RATE,
TBL_REVENUE_PERIOD_RATE.TYPE
FROM
TBL_REVENUE_PERIOD_RATE
JOIN max_period ON max_period.PERIOD = TBL_REVENUE_PERIOD_RATE.PERIOD
AND max_period.TYPE = TBL_REVENUE_PERIOD_RATE.TYPE
WHERE
TBL_REVENUE_PERIOD_RATE.TYPE =: typePeriodRate;"
Query 29,"SELECT CONTRACT_AMT FROM TBL_BI_CONTRACT_REF_DEFINE WHERE CONTRACT_ID = :contractId
Sau khi xử lý ta lấy được dữ liệu sau :"
Query 30,"UPDATE TBL_PERIOD_EVALUATION
SET auto_evaluation_result =
CASE
WHEN evaluation_result IS NULL THEN
'NOT_FOLLOW' ELSE 'FOLLOW'
END,
evaluation_result =
CASE
WHEN evaluation_result IS NULL THEN
'NOT_FOLLOW' ELSE evaluation_result
END;"
Query 31,"UPDATE TBL_PERIOD_EVALUATION
SET auto_evaluation_result =
:autoEvaluationResult,
evaluation_result =
CASE
WHEN evaluation_result IS NULL THEN
:autoEvaluationResult  ELSE evaluation_result
END;"
Query 32,"UPDATE tbl_revenue_condition
SET auto_evaluation_result =
: autoEvaluationResult;"
Query 33,"SELECT 
*
FROM
TBL_PERIOD_EVALUATION pe
LEFT JOIN TBL_CONTRACT_CONDITION cc ON cc.id = pe.CONTRACT_CONDITION_ID
LEFT JOIN TBL_LOAN_PRODUCT_CONDITION lc ON lc.id = pe.CONTRACT_CONDITION_ID
WHERE
pe.EVALUATION_DATE IS NOT NULL
AND ( pe.AUTO_EVALUATION_RESULT IS NULL OR ( pe.AUTO_EVALUATION_RESULT = 'FOLLOW' AND pe.GROUP_CONTRACT_CONDITION = 'SECUR_PROP_INSURANCE' ) )
AND pe.EVALUATION_RESULT IS NULL
AND pe.GROUP_CONTRACT_CONDITION NOT IN ( 'CROSS_SELLING', 'CREDIT_RELATION', 'REVENUE' ) ( pe.STATUS IS NULL OR pe.STATUS <> 'APPROVED' )
AND (
pe.CONTRACT_CONDITION_ID IS NULL
OR ( pe.GROUP_CONTRACT_CONDITION <> 'LOAN_PRODUCT_CONDITION' AND cc.STATUS = 'APPROVED' )
OR ( pe.GROUP_CONTRACT_CONDITION = 'LOAN_PRODUCT_CONDITION' AND lc.STATUS = 'ACTIVE' )
)
AND (
( pe.REGISTER_DATE IS NOT NULL AND TRUNC( pe.REGISTER_DATE ) < TRUNC( SYSDATE ) )
OR ( pe.REGISTER_DATE IS NULL AND TRUNC( pe.EVALUATION_DATE ) < TRUNC( SYSDATE ) )
);"
Query 34,"UPDATE TBL_PERIOD_EVALUATION
SET AUTO_EVALUATION_RESULT = 'NOT_FOLLOW',
EVALUATION_RESULT= 'NOT_FOLLOW',
report_note =
CASE
WHEN 'STOP_CHECK_REPORT' = report_batch_id THEN
report_note ELSE NULL
END,
report_batch_id =
CASE
WHEN report_batch_id IS NOT NULL
AND 'STOP_CHECK_REPORT' <> report_batch_id THEN
'RE_CHECK'
WHEN 'STOP_CHECK_REPORT' = report_batch_id THEN
report_batch_id ELSE NULL END;"
Query 35,"UPDATE TBL_PERIOD_EVALUATION
SET AUTO_EVALUATION_RESULT = 'NOT_FOLLOW',
EVALUATION_RESULT= 'NOT_FOLLOW';"
Query 36,"SELECT 
*
FROM
TBL_PERIOD_EVALUATION pe
JOIN TBL_CONTRACT_CONDITION cc ON cc.id = pe.CONTRACT_CONDITION_ID
WHERE
pe.EVALUATION_DATE IS NOT NULL
AND pe.AUTO_EVALUATION_RESULT IS NULL OR pe.AUTO_EVALUATION_RESULT = 'NOT_ENOUGH_EVALUATION_DATA'
AND pe.GROUP_CONTRACT_CONDITION = 'CROSS_SELLING'
AND ( pe.STATUS IS NULL OR.STATUS = 'APPROVED' )
AND (
( pe.REGISTER_DATE IS NOT NULL AND TRUNC( pe.REGISTER_DATE ) < TRUNC( SYSDATE ) )
OR ( pe.REGISTER_DATE IS NULL AND TRUNC( pe.EVALUATION_DATE ) < TRUNC( SYSDATE ) )
);"
Query 37,SELECT * FROM TBL_CROSS_SELLING WHERE CONDITION_ID = :conditionId;
Query 38,UPDATE TBL_PERIOD_EVALUATION SET AUTO_EVALUATION_RESULT = 'NOT_ENOUGH_EVALUATION_DATA' WHERE id = :id;
Query 39,"UPDATE TBL_PERIOD_EVALUATION
SET auto_evaluation_result =
:autoEvaluationResult,
evaluation_result =
CASE
WHEN evaluation_result IS NULL THEN
:autoEvaluationResult  ELSE evaluation_result
END;"
Query 40,"SELECT 
*
FROM
TBL_PERIOD_EVALUATION
WHERE
PERIOD <> 0
AND GROUP_CONTRACT_CONDITION NOT IN ( 'REVALUE_COLLATERAL', 'SECUR_PROP_INSURANCE' )
AND ( CONTRACT_STATUS IS NULL OR CONTRACT_STATUS NOT IN ( 'OVERDUE_1', 'OVERDUE_2' ) )
AND ( CONTRACT_CONDITION_STATUS IS NULL OR CONTRACT_CONDITION_STATUS <> 'STOP_FOLLOW' )
AND LOCKED_KEY IS NULL
AND CREATE_NEXT_PERIOD_STATUS IN ( 'NEW', 'RENEW' )
AND ( FORCE_CREATE_NEXT = 1 OR CAST( EVALUATION_DATE AS DATE ) < CAST( SYSDATE ) );"
Query 41,"UPDATE bản ghi hiện tại : Không thực hiện sinh kỳ mới
+ Nếu FREQUENCY <> 0 AND EVALUATION_RESULT = FOLLOW  thực hiện insert thêm 1 bản ghi kỳ mới theo quy tắc"
Query 42,
Query 43,"UPDATE bản ghi hiện tại : Không thực hiện sinh kỳ mới
+ Nếu FREQUENCY <> 0 thực hiện insert thêm 1 bản ghi kỳ mới theo quy tắc"
Query 44,"SELECT * FROM TBL_PERIODIC_TEST_FREQUENCY WHERE CUSTOMER_TYPE = NVL(SUBSTR(PERIODIC_TYPE, 0, INSTR(PERIODIC_TYPE, '#')-1), PERIODIC_TYPE)= CUSTOMER_TYPE;"
Query 45,"SELECT * FROM TBL_LOAN_PRODUCT_CONDITION WHERE CODE = LOAN_PRODUCT_CODE ( LOAN_PRODUCT_CODE lấy từ dữ liệu gốc)
+ Nếu  AUTO_PERIOD = 1 OR BUSINESS_UNIT_NOTE = 1 OR  loanCondition IS NULL  update lại bản ghi gốc với dữ liệu sau :
SET CREATE_NEXT_PERIOD_STATUS = RENEW"
Query 46,"UPDATE lại bản ghi gốc với dữ liệu sau :
SET CREATE_NEXT_PERIOD_STATUS = SUCCESS."
Query 47,
Query 48,"UPDATE lại bản ghi gốc với dữ liệu sau :
SET CREATE_NEXT_PERIOD_STATUS = SUCCESS."
Query 49,"UPDATE TBL_PERIOD_EVALUATION
SET STATUS = 'STOP_FOLLOW',
REPORT_NOTE = 'Ngừng theo dõi TSBD'
WHERE
GROUP_CONTRACT_CONDITION IN ( 'REVALUE_COLLATERAL', 'SECUR_PROP_INSURANCE' )
SELECT DISTINCT COLLATERAL_ID FROM TBL_BI_COLLATERAL WHERE STATE = 'STOP_FOLLOW' );"
Query 50,"SELECT 
*
FROM
TBL_BI_COLLATERAL
WHERE
WHERE
TBL_BI_COLLATERAL.STATE = 'CHANGE'
AND TBL_BI_COLLATERAL.PERIOD_STATUS IN ( 'NEW', 'RENEW' )
AND TBL_BI_COLLATERAL.DATA_STATUS = 'ACTIVE'
AND TBL_BI_COLLATERAL.PERIOD_CONDITION = 'ENOUGH';"
Query 51,"SELECT 
*
FROM
TBL_PERIOD_EVALUATION
WHERE
TBL_BI_COLLATERAL.COLLATERAL_ID = TBL_PERIOD_EVALUATION.COLLATERAL_ID
AND TBL_PERIOD_EVALUATION.GROUP_CONTRACT_CONDITION IN ( 'REVALUE_COLLATERAL', 'SECUR_PROP_INSURANCE' );"
Query 52,"SELECT * FROM tbl_val_collateral_frequency WHERE collateral_type = 	TBL_BI_COLLATERAL.COLL_TYPE
B3 : Lấy điều kiện nghị quyết"
Query 53,"SELECT 
*
FROM
tbl_contract_condition
WHERE
GROUP_CONTRACT_CONDITION = 'REVALUE_COLLATERAL'
AND (STATUS IS NULL OR STATUS <>'STOP_FOLLOW';"
Query 54,UPDATE TBL_BI_COLLATERAL SET period_status = 'SUCCESS' AND state = 'NOT_CHANGE' AND UPDATE d_user = 'SYSTEM_USER' AND UPDATE _date = SYSDATE;
Query 55,"SELECT 
*
FROM
STG_SEAOPS.TBL_BI_CONTRACT_REF_DEFINE
WHERE
DATA_STATUS = 'ACTIVE'
AND (
STATUS IS NULL
OR STATUS NOT IN ( 'OVERDUE_1', 'OVERDUE_2' )
AND CPS_DKSPV = 'N'
AND CREATE_PERIOD_STATUS IN ( 'NEW', 'RENEW' );"
Query 56,"SELECT 
*
FROM
TBL_LOAN_PRODUCT_CONDITION
WHERE
PRODUCT_TYPE = contract.LOAN_PRODUCT_ID
AND STATUS = 'ACTIVE';"
Query 57,"SELECT 
*
FROM
TBL_PERIOD_EVALUATION
WHERE
CONTRACT_ID = contract.REF_ID
AND LOAN_PRODUCT_CODE = loanCondition.CODE;"
Query 58,"UPDATE dữ liệu bảng hợp đồng vay :
UPDATE STG_SEAOPS.TBL_BI_CONTRACT_REF_DEFINE
SET CPS_DKSPV = 'Y'
AND CREATE_PERIOD_STATUS = 'RENEW'
AND UPDATED_DATE = SYSDATE
AND UPDATED_USER = 'SYSTEM_USER';"
Query 59,"UPDATE dữ liệu bảng hợp đồng vay :
UPDATE STG_SEAOPS.TBL_BI_CONTRACT_REF_DEFINE
SET CPS_DKSPV = 'Y'
AND CREATE_PERIOD_STATUS = 'RENEW'
AND UPDATED_DATE = SYSDATE
AND UPDATED_USER = 'SYSTEM_USER';"
Query 60,"SELECT 
*
FROM
STG_SEAOPS.TBL_BI_DISBURSEMENT_HISTORY
JOIN STG_SEAOPS.TBL_BI_CONTRACT_REF_DEFINE ON STG_SEAOPS.TBL_BI_CONTRACT_REF_DEFINE.REF_ID = STG_SEAOPS.TBL_BI_DISBURSEMENT_HISTORY.CONTRACT_REF
WHERE
DATA_STATUS = 'ACTIVE'
and CREATE_PERIOD_STATUS in ('NEW', 'RENEW')"
Query 61,"SELECT 
DH.CONTRACT_REF ref_id, DH.LOAN_CODE loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, DH.VALUE_DATE value_date, DH.PRODUCT_CODE 	product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_DISBURSEMENT_HISTORY DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_PERIOD_STATUS in (‘NEW’,’RENEW’)
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_md loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.past_sched_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_GUARANTEE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_PERIOD_STATUS in (‘NEW’,’RENEW’)
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_id loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.issue_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_LC_RELEASE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE_BIPLUS CRD
ON CRD.REF_ID = DH.CONTRACT_REF
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_PERIOD_STATUS in (‘NEW’,’RENEW’);"
Query 62,"SELECT 
*
FROM
TBL_CONTRACT_CONDITION
WHERE
(GROUP_CONDITION_TYPE is null or  GROUP_CONDITION_TYPE = DKNQ)
AND  GROUP_CONTRACT_CONDITION = 'MDSDV'
AND STATUS = 'APPROVED'
AND CONTRACT_ID = : contract_id
Dữ liệu điều kiện sản phẩm MDSDV đã duyệt tương ứng với hợp đồng:
SELECT 
*
FROM
TBL_CONTRACT_CONDITION
WHERE
(GROUP_CONDITION_TYPE = DKSP)
AND LOAN_PRODUCT_ID = :product_code – product_code từ khoản giải ngân lấy từ 3 bảng
AND  GROUP_CONTRACT_CONDITION = 'MDSDV'
AND STATUS = 'APPROVED'
AND CONTRACT_ID = : contract_id
Dữ liệu danh mục MDSDV :"
Query 63,"SELECT 
*
FROM
tbl_frck_purpose_use_capital
WHERE
PRODUCT_TYPE = : product_type"
Query 64,"SELECT 
CUSTOMER_ID, CO_CODE
from
STG_SEAOPS.TBL_BI_CONTRACT_REF_DEFINE
where
DATA_STATUS = 'ACTIVE'
and (
STATUS is null
or STATUS not in ('OVERDUE_1', 'OVERDUE_2')
)
and CPS_TSKTDK = 'N'
and LOCKED_KEY is null
and CREATE_PERIOD_STATUS in ('NEW', 'RENEW') GROUP BY CUSTOMER_ID, CO_CODE"
Query 65,SELECT * FROM STG_SEAOPS.TBL_BI_CONTRACT_REF_DEFINE  WHERE CUSTOMER_ID = :customerId AND CO_CODE = :coCode;
Query 66,"SELECT 
*
FROM
TBL_PERIOD_EVALUATION
WHERE
GROUP_CONTRACT_CONDITION = 'PERIODIC'
AND CUSTOMER_ID = : customerId
AND CO_CODE = : coCode
AND CAREATE_DATE = (
SELECT 
MAX(CAREATE_DATE)
FROM
TBL_PERIOD_EVALUATION
WHERE
GROUP_CONTRACT_CONDITION = 'PERIODIC'
AND CUSTOMER_ID = : customerId
AND CO_CODE = : coCode
);"
Query 67,"SELECT 
*
FROM
TBL_PERIOD_EVALUATION
WHERE
GROUP_CONTRACT_CONDITION = 'PERIODIC'
AND CUSTOMER_ID = : customerId
AND CO_CODE = : coCode
AND STATUS = 'APPROVED'
AND PERRIOD = (
SELECT 
MAX(PERRIOD)
FROM
TBL_PERIOD_EVALUATION
WHERE
GROUP_CONTRACT_CONDITION = 'PERIODIC'
AND CUSTOMER_ID = : customerId
AND CO_CODE = : coCode
AND STATUS = 'APPROVED'
);"
Query 68,
Query 69,"SELECT * FROM TBL_CONTRACT_CONDITION WHERE GROUP_CONTRACT_CONDITION = 'PERIODIC' and STATUS = 'APPROVED' and CONTRACT_ID = :refId  ( refId = contract.REF_ID)
Lấy danh mục tần suât kiểm tra định kỳ tương ứng
cusType = CASE WHEN 'KHCN' = contract.CUSTOMER_CLASS THEN 'PERSONAL' ELSE 'ENTERPRISE' END
SELECT 
*
FROM
tbl_periodic_test_frequency
WHERE
CUSTOMER_TYPE = : custType"
Query 70,"SELECT 
loans_term_ext
FROM
STG_SEAOPS.TBL_BI_DISBURSEMENT_HISTORY
WHERE
CONTRACT_REF = : refID
AND loans_term_ext is not null"
Query 71,"UPDATE dữ liệu 2 trường hợp trên vào bảng TBL_PERIOD_EVALUATION
Đồng thời update bảng STG_SEAOPS.TBL_BI_CONTRACT_REF_DEFINE :
UPDATE 
STG_SEAOPS.TBL_BI_CONTRACT_REF_DEFINE
SET
cps_tsktdk = 'Y' WHRER CUSTOMER_ID = : customerId
AND CO_CODE = : coCode"
Query 72,"SELECT 
CUSTOMER_ID, CO_CODE
from
STG_SEAOPS.TBL_BI_CONTRACT_REF_DEFINE
where
DATA_STATUS = 'ACTIVE'
and (
STATUS is null
or STATUS not in ('OVERDUE_1', 'OVERDUE_2')
)
and CPS_TSKTDK = 'N'
and LOCKED_KEY is null
and CREATE_PERIOD_STATUS in ('NEW', 'RENEW') GROUP BY CUSTOMER_ID, CO_CODE"
Query 73,SELECT * FROM STG_SEAOPS.TBL_BI_CONTRACT_REF_DEFINE  WHERE CUSTOMER_ID = :customerId AND CO_CODE = :coCode;
Query 74,"SELECT 
*
FROM
TBL_PERIOD_EVALUATION
WHERE
GROUP_CONTRACT_CONDITION = 'PERIODIC'
AND CUSTOMER_ID = : customerId
AND CO_CODE = : coCode
AND CAREATE_DATE = (
SELECT 
MAX(CAREATE_DATE)
FROM
TBL_PERIOD_EVALUATION
WHERE
GROUP_CONTRACT_CONDITION = 'PERIODIC'
AND CUSTOMER_ID = : customerId
AND CO_CODE = : coCode
);"
Query 75,"SELECT 
*
FROM
TBL_PERIOD_EVALUATION
WHERE
GROUP_CONTRACT_CONDITION = 'PERIODIC'
AND CUSTOMER_ID = : customerId
AND CO_CODE = : coCode
AND STATUS = 'APPROVED'
AND PERRIOD = (
SELECT 
MAX(PERRIOD)
FROM
TBL_PERIOD_EVALUATION
WHERE
GROUP_CONTRACT_CONDITION = 'PERIODIC'
AND CUSTOMER_ID = : customerId
AND CO_CODE = : coCode
AND STATUS = 'APPROVED'
);"
Query 76,SELECT * FROM TBL_CONTRACT_CONDITION WHERE GROUP_CONTRACT_CONDITION = 'PERIODIC' and STATUS = 'APPROVED' and CONTRACT_CONDITION_TYPE = (NULL or DKNQ) and CONTRACT_ID = :refId  ( refId = contract.REF_ID);
Query 77,SELECT * FROM TBL_CONTRACT_CONDITION WHERE GROUP_CONTRACT_CONDITION = 'PERIODIC' and STATUS = 'APPROVED' and CONTRACT_CONDITION_TYPE = DKSP and CONTRACT_ID = :refId  ( refId = contract.REF_ID);
Query 78,"SELECT 
*
FROM
tbl_periodic_test_frequency
WHERE
CUSTOMER_TYPE = : custType"
Query 79,"UPDATE dữ liệu 2 trường hợp trên vào bảng TBL_PERIOD_EVALUATION
Đồng thời update bảng STG_SEAOPS.TBL_BI_CONTRACT_REF_DEFINE :
UPDATE 
STG_SEAOPS.TBL_BI_CONTRACT_REF_DEFINE
SET
cps_tsktdk = 'Y' WHRER CUSTOMER_ID = : customerId
AND CO_CODE = : coCode"
Query 80,"SELECT 
pe.*,
CASE WHEN pe.group_contract_condition = 'LOAN_PRODUCT_CONDITION' THEN lp.sanction WHEN pe.group_contract_condition = 'REVENUE' THEN rc.sanction ELSE cd.sanction END as sanction,
CASE WHEN pe.group_contract_condition = 'LOAN_PRODUCT_CONDITION' THEN 'OTHER' WHEN pe.group_contract_condition = 'REVENUE' THEN rc.sanctionType ELSE cd.sanctionType END as sanctionType,
CASE WHEN pe.group_contract_condition = 'LOAN_PRODUCT_CONDITION' THEN pe.LOAN_PRODUCT_CODE || pe.CONTRACT_ID WHEN pe.group_contract_condition = 'REVENUE'
AND rc.origin_id is not null THEN rc.origin_id WHEN pe.group_contract_condition = 'REVENUE'
AND rc.origin_id is null THEN rc.ID WHEN cd.origin_id is not null THEN cd.origin_id ELSE cd.ID END as conditionId,
from
TBL_PERIOD_EVALUATION pe
left join TBL_LOAN_PRODUCT_CONDITION lp on lp.CODE = pe.LOAN_PRODUCT_CODE
AND pe.group_contract_condition = 'LOAN_PRODUCT_CONDITION'
left join TBL_REVENUE_CONDITION rc on rc.ID = pe.contract_condition_id
AND pe.group_contract_condition = 'REVENUE'
left join TBL_CONTRACT_CONDITION cd on cd.ID = pe.contract_condition_id
AND pe.group_contract_condition not in (
'REVENUE', 'LOAN_PRODUCT_CONDITION'
)
where
pe.GROUP_CONTRACT_CONDITION <> 'SECUR_PROP_INSURANCE'
and pe.EVALUATION_RESULT is not null
and (
(
pe.CONTRACT_CONDITION_ID is not null
and pe.GROUP_CONTRACT_CONDITION <> 'LOAN_PRODUCT_CONDITION'
)
or (
lp.SANCTION is not null
and pe.GROUP_CONTRACT_CONDITION = 'LOAN_PRODUCT_CONDITION'
)
)
and (
pe.CONTRACT_CONDITION_STATUS is null
or pe.CONTRACT_CONDITION_STATUS not in ('STOP_FOLLOW', 'OVERDUE_1')
)
and (
pe.STATUS is null
or pe.STATUS not in ('STOP_FOLLOW', 'OVERDUE_1')
)
and pe.EVALUATION_DATE < to_date(sysdate, 'DD-MM-YYYY')"
Query 81,"UPDATE TBL_PERIOD_EVALUATION Set period.report_note = 'Điều kiện nghị quyết không có áp chế tài' WHERE ID= period.ID; Đồng thời ko xử lý bước tiếp theo.
applySanctionReports  : Biến lưu list dữ liệu áp chế tài ( kiểu dữ liệu lấy theo bảng tbl_apply_sanction_report ). Mỗi khi xử lý 1 row dữ sẽ add them dữ liệu vào List này để tạo mới dữ liệu chế tài."
Query 82,"SELECT 
*
FROM
tbl_apply_sanction_report
WHERE
condition_id = peroid.condition_id
AND status_report = 'ACTIVE'
ORDER BY
create_user
limit
1"
Query 83,"SELECT 
*
FROM
applySanctionReports
WHERE
condition_id = peroid.condition_id
AND status_report = 'ACTIVE'
ORDER BY
create_user
limit
1"
Query 84,"SELECT 
*
FROM
stg_seaops.tbl_bi_contract_ref_define
WHERE
ref_id = period.contract_id"
Query 85,"SELECT 
*
FROM
stg_seaops.tbl_bi_contract_debt
WHERE
contract_ref = period.contract_id
AND DEBT > 0
AND (
period.group_contract_condition <> 'MDSDV'
OR upper(CONTRACT) = upper (period.loan_code)
AND DAYID = (
SELECT 
MAX(DAYID)
FROM
stg_seaops.tbl_bi_contract_debt
WHERE
contract_ref = period.contract_id
AND DEBT > 0
)"
Query 86,"SELECT 
*
FROM
KSSCT.ad_unit
WHERE
unit_code = period.CO_CODE
Xác định rule tính tháng áp chế tài"
Query 87,"SELECT 
*
FROM
tbl_apply_sanction_report
WHERE
condition_id = peroid.condition_id  AND rating_status = peroid.evaluation_result
AND status_report = 'ACTIVE'
limit
1"
Query 88,DELETE'  ELSE  'SUCCESS'  END;
Query 89,DELETE' AND processStatus <> 'SUCCESS'  THEN processSuccess ELSE  'Áp dụng với trạng thái ACTIVE' END.
Query 90,"UPDATE TBL_PERIOD_EVALUATION Set period.report_note = : reportNote  WHERE ID= period.ID
B4 : Tạo các bản ghi báo cáo áp chế tài"
Query 91,"SELECT 
*
from
TBL_PERIOD_EVALUATION pe
where
pe.GROUP_CONTRACT_CONDITION = 'SECUR_PROP_INSURANCE'
and pe.EVALUATION_RESULT is not null
and (
pe.STATUS is null
or pe.STATUS <> 'STOP_FOLLOW'
)
and (
pe.REPORT_BATCH_ID is null
or pe.REPORT_BATCH_ID = 'RE_CHECK'
)"
Query 92,"UPDATE 
TBL_PERIOD_EVALUATION
SET
REPORT_BATCH_ID = 'SUCCESS'
WHERE
ID = period.ID"
Query 93,"SELECT * FROM TBL_BI_COLLATERAL WHERE collateral_id = period.collateral_id
UPDATE 
TBL_PERIOD_EVALUATION
SET
REPORT_NOTE = 'Không có dữ liệu tài sản bảo đảm',
REPORT_BATCH_ID = 'STOP_CHECK_REPORT'
WHERE
ID = period.ID"
Query 94,"SELECT * FROM STG_SEAOPS.TBL_BI_CONTRACT_REF_DEFINE
WHERE REF_ID IN (: contractRefs ).
UPDATE 
TBL_PERIOD_EVALUATION
SET
REPORT_NOTE = 'Không có dữ liệu hợp đồng giải ngân',
REPORT_BATCH_ID = 'STOP_CHECK_REPORT'
WHERE
ID = period.ID"
Query 95,"SELECT 
*
FROM
tbl_insurance_sanction
WHERE
COLLATERAL_TYPES = period.COLLATERAL_TYPES
AND LOAN_TYPE = contractRefDefine.LOAN_PRODUCT_ID
AND STATUS = 'ACTIVE'"
Query 96,"UPDATE 
TBL_PERIOD_EVALUATION
SET
REPORT_NOTE = 'Không có chế tài bảo hiểm tài sản bảo đảm',
REPORT_BATCH_ID = 'STOP_CHECK_REPORT'
WHERE
ID = period.ID"
Query 97,"SELECT 
*
FROM
tbl_apply_sanction_report
WHERE
collateral_id = peroid.collateral_id
AND CONTRACT_REF = refId
AND status_report = 'ACTIVE'
ORDER BY DESC
create_user
limit
1"
Query 98,"SELECT 
*
FROM
applySanctionReports
WHERE
collateral_id = peroid.collateral_id
AND CONTRACT_REF = refId
AND status_report = 'ACTIVE'
ORDER BY DESC
create_user
limit
1"
Query 99,"SELECT * FROM STG_SEAOPS.TBL_BI_CONTRACT_REF_DEFINE
WHERE REF_ID = refId;"
Query 100,SELECT * FROM insuranceSanctions WHERE START_DATE >= monthValue AND (END_DATE is null OR (END_DATE > monthValue ) ) AND INTEREST_ADJUST = interestAdjustEnum AND REPORT_DATE = reportDateType;
Query 101,"SELECT 
*
FROM
stg_seaops.tbl_bi_contract_debt
WHERE
CONTRACT_REF = refID
AND DEBT > 0
AND DAYID = (
SELECT 
MAX(DAYID)
FROM
stg_seaops.tbl_bi_contract_debt
WHERE
CONTRACT_REF = refID
AND DEBT > 0
)"
Query 102,"SELECT 
*
FROM
KSSCT.ad_unit
WHERE
unit_code = period.CO_CODE"
Query 103,"DELETE"") ngược lại  result.put(ref, ""Áp dụng chế tài với trạng thái ACTIVE"")"
Query 104,
Query 105,
Query 106,"UPDATE TBL_PERIOD_EVALUATION SET period.report_note = : reportNote, CHECK_PERIOD_REPORT = : checkPeriodReport ,REPORT_BATCH_ID = : reportBatchId  WHERE ID= period.ID;"
Query 107,"SELECT * FROM KSSCT.ad_unit
WHERE STATUS = 'ACTIVE' GROUP BY unit_code
p_co_code = adUnit.UNIT_CODE
p_area_code = adUnit.AREA_CODE
Lấy tổng số bản ghi kỳ đánh giá"
Query 108,"SELECT COUNT(*)
from TBL_PERIOD_EVALUATION
where CO_CODE = :p_co_code
and cast(EVALUATION_DATE as date) >= to_date(:p_from_date, 'YYYY-MM-DD HH24:MI:SS')
and cast(EVALUATION_DATE as date) < to_date(:p_to_date, 'YYYY-MM-DD HH24:MI:SS')
and (STATUS is null or STATUS <> 'STOP_FOLLOW')
Lấy tổng só bản ghi đánh giá tuân thủ
SELECT COUNT(*)
from TBL_PERIOD_EVALUATION
where CO_CODE = :p_co_code
and cast(EVALUATION_DATE as date) >= to_date(:p_from_date, 'YYYY-MM-DD HH24:MI:SS')
and cast(EVALUATION_DATE as date) < to_date(:p_to_date, 'YYYY-MM-DD HH24:MI:SS')
and (STATUS is null or STATUS <> 'STOP_FOLLOW')
and evaluation_result = 'FOLLOW'"
Query 109,"SELECT *
from TBL_KPI_REPORT
where CO_CODE = :p_co_code
and (MONTH_YEAR = (EXTRACT(YEAR FROM SYSDATE) -1 || '-12-01'))"
Query 110,"SELECT * FORM TBL_KPI_REPORT  WHERE CO_CODE = :p_co_code
AND ( MONTH_YEAR = EXTRACT(YEAR FROM SYSDATE) || '-' ||(CASE WHEN (EXTRACT(MONTH FROM SYSDATE) -2) < 10 THEN '0' || TO_CHAR(EXTRACT(MONTH FROM SYSDATE) -2)  ELSE TO_CHAR(EXTRACT(MONTH FROM SYSDATE) -2) END ) || '-01'  );"
Query 111,"SELECT SUM (MONTH_POINT) FROM TBL_KPI_REPORT WHERE CO_CODE = :p_co_code  AND EXTRACT(YEAR FROM SYSDATE) = EXTRACT(YEAR FROM to_date(MONTH_YEAR,'YYYY-MM-DD')) GROUP BY CO_CODE   )
Số tháng đã được tính KPI
SELECT EXTRACT(MONTH FROM SYSDATE) -2) FROM DUAL;"
Query 112,"SELECT 
DH.CONTRACT_REF ref_id, DH.LOAN_CODE loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, DH.VALUE_DATE value_date, DH.PRODUCT_CODE 	product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_DISBURSEMENT_HISTORY DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_OTHER_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'OTHER'
and CD.GROUP_CONDITION_TYPE = ‘ĐKSP’
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_md loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.past_sched_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_GUARANTEE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION_BIPLUS CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_OTHER_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'OTHER'
and CD.GROUP_CONDITION_TYPE = 'ĐKSP'
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_id loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.issue_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_LC_RELEASE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE_BIPLUS CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION_BIPLUS CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_OTHER_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'OTHER'
and CD.GROUP_CONDITION_TYPE = 'ĐKSP';"
Query 113,"SELECT 
*
FROM
TBL_CONTRACT_CONDITION
WHERE
GROUP_CONTRACT_CONDITION = 'OTHER'
GROUP_CONDITION_TYPE = 'ĐKSP'
AND STATUS = 'APPROVED'
AND CONTRACT_ID = ref_id
B2 : Dựa vào thông tin của condition bước 1
- Nếu condition.METHOD_OF_PERIOD = METHOD_PERIOD_F1:
Kiểm tra đã có hạng mục sinh ra bởi Điều kiện và Hợp đồng. Nếu đã có rồi thì không sinh hạng mục nữa."
Query 114,SELECT * FROM TBL_PERIOD_EVALUATION WHERE CONTRACT_CONDITION_ID = condition.ID AND CONTRACT_ID = ref_id;
Query 115,"SELECT min(VALUE_DATE) min_value_date FROM (
SELECT VALUE_DATE VALUE_DATE
FROM
STG_SEAOPS.TBL_BI_DISBURSEMENT_HISTORY DH
WHERE DH.CONTRACT_REF = ref_id AND DH.PRODUCT_CODE = product_code
UNION ALL
SELECT ISSUE_DATE VALUE_DATE
FROM
STG_SEAOPS.TBL_BI_LC_RELEASE_SALES LC
WHERE LC.CONTRACT_REF = ref_id AND LC.PRODUCT_CODE = product_code
UNION ALL
SELECT PAST_SCHED_DATE VALUE_DATE
FROM
STG_SEAOPS.TBL_BI_GUARANTEE_SALES GS
WHERE GS.CONTRACT_REF = ref_id AND GS.PRODUCT_CODE = product_code
);"
Query 116,"SELECT * FROM TBL_PERIOD_EVALUATION WHERE CONTRACT_CONDITION_ID = condition.ID
AND CONTRACT_ID = ref_id
AND LOAN_PRODUCT_ID = product_code;"
Query 117,"SELECT 
DH.CONTRACT_REF ref_id, DH.LOAN_CODE loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, DH.VALUE_DATE value_date, DH.PRODUCT_CODE 	product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_DISBURSEMENT_HISTORY DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_CROSS_SELLING_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'OTHER'
and CD.GROUP_CONDITION_TYPE = ‘ĐKSP’
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_md loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.past_sched_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_GUARANTEE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION_BIPLUS CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_CROSS_SELLING_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'OTHER'
and CD.GROUP_CONDITION_TYPE = 'ĐKSP'
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_id loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.issue_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_LC_RELEASE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE_BIPLUS CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION_BIPLUS CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_CROSS_SELLING_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'OTHER'
and CD.GROUP_CONDITION_TYPE = 'ĐKSP';"
Query 118,"SELECT 
DH.CONTRACT_REF ref_id, DH.LOAN_CODE loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, DH.VALUE_DATE value_date, DH.PRODUCT_CODE 	product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_DISBURSEMENT_HISTORY DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_ CREDIT_RELATION_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'OTHER'
and CD.GROUP_CONDITION_TYPE = ‘ĐKSP’
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_md loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.past_sched_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_GUARANTEE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION_BIPLUS CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_CREDIT_RELATION_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'OTHER'
and CD.GROUP_CONDITION_TYPE = 'ĐKSP'
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_id loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.issue_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_LC_RELEASE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE_BIPLUS CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION_BIPLUS CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_CREDIT_RELATION_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'OTHER'
and CD.GROUP_CONDITION_TYPE = 'ĐKSP';"
Query 119,"SELECT 
DH.CONTRACT_REF ref_id, DH.LOAN_CODE loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, DH.VALUE_DATE value_date, DH.PRODUCT_CODE 	product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_DISBURSEMENT_HISTORY DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_FINANCIAL_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'FINANCIAL'
and CD.GROUP_CONDITION_TYPE = ‘ĐKSP’
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_md loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.past_sched_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_GUARANTEE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION_BIPLUS CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_FINANCIAL_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'FINANCIAL'
and CD.GROUP_CONDITION_TYPE = 'ĐKSP'
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_id loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.issue_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_LC_RELEASE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE_BIPLUS CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION_BIPLUS CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_FINANCIAL_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'FINANCIAL'
and CD.GROUP_CONDITION_TYPE = 'ĐKSP';"
Query 120,"SELECT 
DH.CONTRACT_REF ref_id, DH.LOAN_CODE loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, DH.VALUE_DATE value_date, DH.PRODUCT_CODE 	product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_DISBURSEMENT_HISTORY DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_LAW_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'LAW'
and CD.GROUP_CONDITION_TYPE = ‘ĐKSP’
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_md loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.past_sched_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_GUARANTEE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION_BIPLUS CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_LAW_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'LAW'
and CD.GROUP_CONDITION_TYPE = 'ĐKSP'
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_id loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.issue_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_LC_RELEASE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE_BIPLUS CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION_BIPLUS CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_LAW_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'LAW'
and CD.GROUP_CONDITION_TYPE = 'ĐKSP';"
Query 121,"SELECT 
DH.CONTRACT_REF ref_id, DH.LOAN_CODE loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, DH.VALUE_DATE value_date, DH.PRODUCT_CODE 	product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_DISBURSEMENT_HISTORY DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_LIFE_INSURANCE_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'LIFE_INSURANCE'
and CD.GROUP_CONDITION_TYPE = ‘ĐKSP’
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_md loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.past_sched_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_GUARANTEE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION_BIPLUS CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_LIFE_INSURANCE_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'LIFE_INSURANCE'
and CD.GROUP_CONDITION_TYPE = 'ĐKSP'
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_id loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.issue_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_LC_RELEASE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE_BIPLUS CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_CONTRACT_CONDITION_BIPLUS CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_LIFE_INSURANCE_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'LIFE_INSURANCE'
and CD.GROUP_CONDITION_TYPE = 'ĐKSP';"
Query 122,"SELECT 
DH.CONTRACT_REF ref_id, DH.LOAN_CODE loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, DH.VALUE_DATE value_date, DH.PRODUCT_CODE 	product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_DISBURSEMENT_HISTORY DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_REVENUE_CONDITION CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_REVENUE_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'REVENUE'
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_md loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.past_sched_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_GUARANTEE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_REVENUE_CONDITION CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_REVENUE_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'REVENUE'
UNION ALL
SELECT 
DH.CONTRACT_REF ref_id, dh.contract_id loan_code, CRD.VALUE_DATE_MIN value_date_min_ref, dh.issue_date value_date, DH.PRODUCT_CODE      product_code, DH. MATURITY_DATE maturity_date
FROM
TBL_BI_LC_RELEASE_SALES DH
JOIN TBL_BI_CONTRACT_REF_DEFINE_BIPLUS CRD
ON CRD.REF_ID = DH.CONTRACT_REF
JOIN TBL_REVENUE_CONDITION CD
ON DH.CONTRACT_REF = CD.CONTRACT_ID
WHERE
DH.DATA_STATUS = 'ACTIVE'
and DH.CREATE_REVENUE_PERIOD_STATUS = null
and CD.GROUP_CONTRACT_CONDITION = 'REVENUE'
and CD.GROUP_CONDITION_TYPE = 'ĐKSP';"
Query 123,"SELECT 
*
FROM
TBL_CONTRACT_CONDITION
WHERE
GROUP_CONTRACT_CONDITION = 'REVENUE'
AND STATUS = 'APPROVED'
AND CONTRACT_ID = ref_id
B2 : Dựa vào thông tin của condition bước 1
- Nếu condition.METHOD_OF_PERIOD = METHOD_PERIOD_F1:
Kiểm tra đã có hạng mục sinh ra bởi Điều kiện và Hợp đồng. Nếu đã có rồi thì không sinh hạng mục nữa."
Query 124,SELECT * FROM TBL_PERIOD_EVALUATION WHERE CONTRACT_CONDITION_ID = condition.ID AND CONTRACT_ID = ref_id;
Query 125,"SELECT min(VALUE_DATE) min_value_date FROM (
SELECT VALUE_DATE VALUE_DATE
FROM
STG_SEAOPS.TBL_BI_DISBURSEMENT_HISTORY DH
WHERE DH.CONTRACT_REF = ref_id AND DH.PRODUCT_CODE = product_code
UNION ALL
SELECT ISSUE_DATE VALUE_DATE
FROM
STG_SEAOPS.TBL_BI_LC_RELEASE_SALES LC
WHERE LC.CONTRACT_REF = ref_id AND LC.PRODUCT_CODE = product_code
UNION ALL
SELECT PAST_SCHED_DATE VALUE_DATE
FROM
STG_SEAOPS.TBL_BI_GUARANTEE_SALES GS
WHERE GS.CONTRACT_REF = ref_id AND GS.PRODUCT_CODE = product_code
);"
Query 126,"SELECT * FROM TBL_PERIOD_EVALUATION WHERE CONTRACT_CONDITION_ID = condition.ID
AND CONTRACT_ID = ref_id
AND LOAN_PRODUCT_ID = product_code;"
Query 127,"SELECT * FROM TBL_ADVANCE_PAYMENT_RELEASE WHERE CREATE_PERIOD_STATUS = NULL OR CREATE_PERIOD_STATUS IN (‘NEW’,’RENEW’)
Dữ liệu lấy ta từ bước trên được xử lý theo từng Row (sub_MD) theo quy tắc sau :"
Query 128,SELECT * FROM TBL_BI_GUARANTEE_SALES WHERE CONTRACT_MD = sub_MD.CONTRACT_MD;
Query 129,"SELECT 
*
FROM
TBL_CONTRACT_CONDITION
WHERE
GROUP_CONTRACT_CONDITION = 'GTTTU'
AND STATUS = 'APPROVED'
AND CONTRACT_ID = MD.CONTRACT_REF"
Query 130,"SELECT 
*
FROM
TBL_LOAN_PRODUCT_CONDITION
WHERE
CATEGORY = ‘ADVANCE_RELEASE_CONDITION’
AND PRODUCT_TYPE = MD.PRODUCT_CODE"
